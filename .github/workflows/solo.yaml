# This is a basic workflow to help you get started with Actions

name: solo

# workflow runs whenever a PR against develop is opened or labeled
on:
  pull_request:
    types:
      - labeled
      - opened
    branches: 
      - develop

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  workflow-handler:
    runs-on: ubuntu-22.04
    steps:
    # https://github.com/octokit/action.js/
    - name: Install
      run: npm install @octokit/action@v5.0.2
    - name: Verification
      uses: actions/github-script@v6.4.0
      with:
        GITHUB_TOKEN: ${{ secrets.CWPEARSON_CIDUMMY_METADATAREAD }}
        script: |
          // Octokit.js
          // https://github.com/octokit/core.js#readme
          const { Octokit } = require("@octokit/action");
          const octokit = new Octokit()
          const response = await octokit.request('GET /repos/{owner}/{repo}/collaborators/{username}', {
            owner: 'cwpearson',
            repo: 'ci-dummy',
            username: '${{ github.actor }}',
            headers: {
              'X-GitHub-Api-Version': '2022-11-28'
            }
          })
          const valid_user = (response.status == "200")
          if (valid_user) {
            console.log("${{ github.actor }} is a collaborator")
            if ("${{ github.event.action }}" === "opened") {
              console.log("Starting job when PR opened by ${{ github.actor }}")
            } else if ("${{ github.event.action }}" === "labeled" && "${{ github.event.label.name }}" == "RUN TESTS") {
              console.log("starting job on PR labeled \"${{ github.event.label.name }}\" by ${{ github.actor }}")
            } else {
              core.setFailed("not running job: collaborating user, but unexpected trigger")
            }
          } else {
            console.log(response)
            core.setFailed("not running job: ${{ github.actor }} is not a collaborator")
          }
          

  configure_build_test:
    needs: workflow-handler
    runs-on: self-hosted

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
